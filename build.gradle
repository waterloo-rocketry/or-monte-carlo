plugins {
    id 'java'
}

group 'com.waterloorocketry'
version '0.1'

repositories {
    flatDir {
        dirs 'openrocket/build/libs' // Point to the submodule's output
    }
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['or-monte-carlo/src']  // Using list syntax for consistency
        }
    }
}

dependencies {
    implementation name: 'OpenRocket', version: '24.12.RC.01', group: 'info.openrocket'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

// Java configuration
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    // Ensure consistent encoding and compatibility
    compileJava {
        options.encoding = 'UTF-8'
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}

task buildOpenRocket(type: Exec) {
    workingDir 'openrocket'

    // Detect OS and set the appropriate gradlew command
    def isWindows = System.getProperty('os.name').toLowerCase().contains('windows')
    commandLine isWindows ? 'gradlew.bat' : './gradlew', 'build'

    // Only build if the output directory doesn't exist
    onlyIf {
        !file('openrocket/build/libs').exists()
    }
}

// Make sure the submodule builds before the main build
tasks.named('build') {
    dependsOn buildOpenRocket
}

tasks.register('run', JavaExec) {
    dependsOn buildOpenRocket
    mainClass = 'com.waterloorocketry.openrocket_monte_carlo.Main'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.library.path', 'build/natives/lib'
}